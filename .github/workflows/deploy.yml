name: Application Deployment
description: This workflow builds, tests, and deploys a Node.js application using Docker.

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run check

  docker:
    runs-on: self-hosted
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure Docker is installed and running
        run: |
          set -e
          echo "Checking if Docker is installed..."
          if ! command -v docker &> /dev/null; then
            echo "Docker not found. Installing..."
            sudo apt-get update
            sudo apt-get install -y \
              ca-certificates \
              curl \
              gnupg \
              lsb-release
            sudo mkdir -p /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
              $(lsb_release -cs) stable" | \
              sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin
          else
            echo "Docker is already installed."
          fi

          echo "Checking if Docker daemon is running..."
          if ! sudo docker info > /dev/null 2>&1; then
            echo "Docker is not running. Starting Docker..."
            sudo systemctl start docker
          else
            echo "Docker is already running."
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t node-express-app .

      - name: Stop and remove existing container if exists, then run new container
        run: |
          #!/bin/bash
          set -e

          CONTAINER_NAME="node-express-app"

          if [ "$(docker ps -q -f name=$CONTAINER_NAME)" ]; then
            echo "Stopping running container: $CONTAINER_NAME"
            docker stop $CONTAINER_NAME
          fi

          if [ "$(docker ps -aq -f name=$CONTAINER_NAME)" ]; then
            echo "Removing existing container: $CONTAINER_NAME"
            docker rm $CONTAINER_NAME
          fi

          echo "Running new container: $CONTAINER_NAME"
          docker run -d -p 8080:5000 --name $CONTAINER_NAME node-express-app

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/node-express-app:latest
